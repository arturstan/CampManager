@model CampManagerWebUI.Models.ProductOutPositionViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Utwórz</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <h3 class="text-danger">@ViewBag.Error</h3>

    <div class="form-horizontal">
        <h4>Pozycja rozchodu</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdProductOut)

        <div class="form-group">
            @Html.LabelFor(model => model.IdProduct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.IdProduct, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.IdProduct, new SelectList(Model.Products, "Id", "NameDescriptionMeasuresAmount"))
                @Html.ValidationMessageFor(model => model.IdProduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Utwórz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót do rozchodu", "Edit", "ProductOut", new { id = Model.IdProductOut }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
