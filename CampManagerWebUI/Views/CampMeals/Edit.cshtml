@model CampManagerWebUI.Models.CampMealViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edycja</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Stan obozu</h4>
    <p class="text-danger">@ViewBag.ErrorMessage</p>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdCampMealBreakfast)
    @Html.HiddenFor(model => model.IdCampMealDinner)
    @Html.HiddenFor(model => model.IdCampMealSupper)

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.CampName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CampName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>
    </dl>

    <div class="form-group">
        @Html.LabelFor(model => model.BreakfastEat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BreakfastEat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BreakfastEat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BreakfastEatSupplies, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BreakfastEatSupplies, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BreakfastEatSupplies, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BreakfastCash, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BreakfastCash, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BreakfastCash, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DinnerEat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DinnerEat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DinnerEat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DinnerEatSupplies, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DinnerEatSupplies, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DinnerEatSupplies, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DinnerCash, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DinnerCash, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DinnerCash, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SupperEat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SupperEat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SupperEat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SupperEatSupplies, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SupperEatSupplies, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SupperEatSupplies, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SupperCash, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SupperCash, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SupperCash, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Reside, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Reside, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Reside, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Zapisz" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Powrót do obozu", "Edit", "Camps", new { id = Model.IdCamp }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
