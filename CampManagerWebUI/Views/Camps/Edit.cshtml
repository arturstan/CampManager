@model CampManagerWebUI.Models.CampViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edycja</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Obóz</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.IdCampOrganization)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.IdPlace, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.IdPlace, new SelectList(Model.Places, "Id", "Name"))
                @Html.ValidationMessageFor(model => model.IdPlace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PricePerPerson, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PricePerPerson, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PricePerPerson, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-default" />
            </div>
        </div>

    </div>

    <p>
        @Html.ActionLink("Utwórz nową pozycję", "Create", "CampMeals", new { idCamp = Model.Id }, null) |
        @Html.ActionLink("Powrót do listy", "Index")
    </p>
    <div>
        <table class="table">
            <tr>
                <th>
                    Data
                </th>
                <th>
                    Śniadanie
                </th>
                <th>
                    Śniadanie prowiant
                </th>
                <th>
                    Śniadanie kasa
                </th>
                <th>
                    Obiad
                </th>
                <th>
                    Obiad prowiant
                </th>
                <th>
                    Obiad kasa
                </th>
                <th>
                    Kolacja
                </th>
                <th>
                    Kolacja prowiant
                </th>
                <th>
                    Kolacja kasa
                </th>
                <th>
                    Zakwaterowanie
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Meal)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BreakfastEat)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BreakfastEatSupplies)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BreakfastCash)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DinnerEat)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DinnerEatSupplies)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DinnerCash)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SupperEat)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SupperEatSupplies)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SupperCash)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reside)
                    </td>
                    <td>
                        @Html.ActionLink("Edycja", "Edit", "CampMeals", new { idCamp = Model.Id, date = item.Date }, null) |
                        @Html.ActionLink("Szczegóły", "Details", "CampMeals", new { idCamp = Model.Id, date = item.Date }, null) |
                        @Html.ActionLink("Usuń", "Delete", "CampMeals", new { idCamp = Model.Id, date = item.Date }, null)
                    </td>
                </tr>
            }

        </table>
    </div>
}

<div>
    @Html.ActionLink("Powrót do listy", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
